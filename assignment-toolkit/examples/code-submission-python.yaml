metadata:
  id: "code-001-factorial"
  version: "2.1.0"
  created: 2024-01-01T00:00:00Z
  modified: 2024-02-01T00:00:00Z
  author: "Computer Science Teacher"
  email: "cs-teacher@school.edu"
  license: "MIT"
  language: "en"
  description: "Python programming assignment for factorial calculation"
  tags: ["programming", "python", "algorithms", "recursion"]
  source_hash: "p1r2o3g4r5a6m"

assignment:
  title: "Factorial Calculator"
  description: "Write a Python function to calculate the factorial of a number using recursion"
  type: "code-submission"
  category: "Programming"
  difficulty: "intermediate"
  points: 15
  time_limit: 3600  # 1 hour
  max_attempts: 3
  auto_grade: false  # Manual review required
  show_feedback: true
  allow_review: true
  published: true
  quarter: "Q3"
  
  # Detailed instructions
  instructions: |
    Write a Python function called `factorial(n)` that calculates the factorial of a positive integer n using recursion.
    
    Requirements:
    1. Use recursion (no loops allowed)
    2. Handle the base case (n = 0 or n = 1)
    3. Include proper error handling for negative numbers
    4. Add docstring documentation
    5. Include test cases to verify your solution
    
    Submit your solution as a .py file with proper comments explaining your approach.
  
  criteria: |
    Grading Criteria (15 points total):
    - Correct implementation (8 points)
    - Proper recursion usage (3 points)
    - Error handling (2 points)
    - Code documentation (1 point)
    - Test cases (1 point)
  
  # Tracking settings
  track_attempts: true
  track_confidence: false  # Not relevant for code submissions
  track_time_spent: true
  
  # Educational metadata
  learning_objectives:
    - "Implement recursive algorithms in Python"
    - "Understand base cases and recursive cases"
    - "Practice proper error handling"
    - "Write clean, documented code"
  prerequisites: ["python-basics", "functions-and-scope"]
  recommended_courses: ["algorithms-101", "python-programming"]
  tags: ["python", "recursion", "algorithms", "functions"]
  
  # Code submission configuration
  code_submission_config:
    programmingLanguage: "python"
    allowFileUpload: true
    maxFiles: 3
    maxFileSizeMb: 5
    allowOutputScreenshots: true
    expectedOutput: |
      factorial(5) = 120
      factorial(0) = 1
      factorial(1) = 1
      factorial(-1) = Error: Negative numbers not allowed
    codeQualityCriteria: |
      - Use meaningful variable names
      - Include proper indentation
      - Add comments explaining logic
      - Follow Python PEP 8 style guidelines

resources:
  - id: "python-recursion-guide"
    title: "Python Recursion Tutorial"
    description: "Comprehensive guide to recursion in Python"
    type: "pdf"
    local_path: "./resources/python-recursion-guide.pdf"
    file_size: 1024000
    mime_type: "application/pdf"
    tags: ["python", "recursion", "tutorial"]
    order: 1
    is_public: true
    
  - id: "factorial-examples"
    title: "Factorial Examples"
    description: "Mathematical examples of factorial calculations"
    type: "pdf"
    local_path: "./resources/factorial-examples.pdf"
    file_size: 256000
    mime_type: "application/pdf"
    tags: ["mathematics", "factorial", "examples"]
    order: 2
    is_public: true
    
  - id: "python-testing-guide"
    title: "Python Unit Testing"
    description: "Guide to writing test cases in Python"
    type: "url"
    url: "https://docs.python.org/3/library/unittest.html"
    tags: ["python", "testing", "documentation"]
    order: 3
    is_public: true

dependencies:
  subjects: ["computer-science", "programming"]
  prerequisites: ["python-basics", "functions-and-scope"]
  recommended_courses: ["algorithms-101", "python-programming", "software-engineering"]
  required_resources: ["python-recursion-guide"]
  software_requirements:
    - name: "Python"
      version: "3.8+"
      description: "Python interpreter for running code"
      required: true
    - name: "Code Editor"
      version: "Any"
      description: "Text editor or IDE for writing code"
      required: true
    - name: "Terminal/Command Prompt"
      version: "Any"
      description: "For running Python scripts"
      required: false

validation:
  is_valid: true
  validated_at: 2024-02-01T00:00:00Z
  validator_version: "1.0.0"
  errors: []
  warnings:
    - "Consider providing starter code template"
    - "Add more specific examples in instructions"
  score: 92
